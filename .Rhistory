fig1FA <- interact_plot(FA_scd_story, pred = story_d, modx = cohort,
plot.points = T, interval = T, point.alpha = 1, vary.lty = F,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean FA", title = "Right Mean FA",
subtitle = paste0(
"interaction p = ",
signif(summary(FA_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 1.1, hjust = -0.01,
label = paste0(
"p = ", signif(summary(ctl_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_FA_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 2.5, hjust = -0.01,
label = paste0(
"p = ", signif(summary(scd_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_FA_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1FA
fig1FA <- interact_plot(FA_scd_story, pred = story_d, modx = cohort,
plot.points = T, interval = T, point.alpha = 1, vary.lty = F,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean FA", title = "Right Mean FA",
subtitle = paste0(
"interaction p = ",
signif(summary(FA_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 1.1, hjust = 1.01,
label = paste0(
"p = ", signif(summary(ctl_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_FA_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 2.5, hjust = 1.01,
label = paste0(
"p = ", signif(summary(scd_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_FA_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1FA
fig1FA <- interact_plot(FA_scd_story, pred = story_d, modx = cohort,
plot.points = T, interval = T, point.alpha = 1, vary.lty = F,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean FA", title = "Right Mean FA",
subtitle = paste0(
"interaction p = ",
signif(summary(FA_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 1.1, hjust = -0.01,
label = paste0(
"p = ", signif(summary(ctl_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_FA_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 2.5, hjust = -0.01,
label = paste0(
"p = ", signif(summary(scd_FA_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_FA_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1FA
fig1MD <- interact_plot(MD_scd_story, pred = story_d, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean MD", title = "Right Mean MD",
subtitle = paste0(
"interaction p = ",
signif(summary(MD_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 1.1, hjust = 1.01,
label = paste0(
"p = ", signif(summary(ctl_MD_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_MD_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 2.5, hjust = 1.01,
label = paste0(
# "p = ", signif(summary(scd_MD_story)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_MD_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1MD
fig1L1 <- interact_plot(L1_scd_story, pred = story_d, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean AxD", title = "Right Mean AxD",
subtitle = paste0(
"interaction p = ",
signif(summary(L1_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 1.1, hjust = 1.01,
label = paste0(
"p = ", signif(summary(ctl_L1_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_L1_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 2.5, hjust = 1.01,
label = paste0(
# "p = ", signif(summary(scd_L1_story)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_L1_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1L1
fig1RD <- interact_plot(RD_scd_story, pred = story_d, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean RD", title = "Right Mean RD",
subtitle = paste0(
"interaction p = ",
signif(summary(RD_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 1.1, hjust = 1.01,
label = paste0(
"p = ", signif(summary(ctl_RD_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_RD_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 2.5, hjust = 1.01,
label = paste0(
# "p = ", signif(summary(scd_RD_story)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_RD_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1RD
fig1ISOVF <- interact_plot(ISOVF_scd_story, pred = story_d, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Story Delayed Recall", y = "Mean FWVF", title = "Right Mean FWVF",
subtitle = paste0(
"interaction p = ",
signif(summary(ISOVF_scd_story)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 1.1, hjust = 1.01,
label = paste0(
"p = ", signif(summary(ctl_ISOVF_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_ISOVF_story)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = Inf, y = Inf, vjust = 2.5, hjust = 1.01,
label = paste0(
"p = ", signif(summary(scd_ISOVF_story)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_ISOVF_story)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig1ISOVF
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/14_scatterplots.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/14_scatterplots.R", echo=TRUE)
fig3L1 <- interact_plot(L1_scd_age, pred = age, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Mean Centered Age", y = "Mean AxD", title = "Bilateral Mean AxD",
subtitle = paste0(
"p < 0.001"
# "interaction p = ", signif(summary(L1_scd_age)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 1.1, hjust = -0.01,
label = paste0(
# "p = ", signif(summary(ctl_L1_age)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_L1_age)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 2.5, hjust = -0.01,
label = paste0(
# "p = ", signif(summary(scd_MD_age)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_L1_age)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig3L1
RD_scd_age <- lm(mean_RD_lower_cingulum_mask ~ age * cohort, df_RD)
summary(RD_scd_age)
ctl_RD_age <- lm(mean_RD_lower_cingulum_mask ~ age, ctl_RD)
scd_RD_age <- lm(mean_RD_lower_cingulum_mask ~ age, scd_RD)
fig3RD <- interact_plot(RD_scd_age, pred = age, modx = cohort,
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
modx.labels = c('Control', 'SCD'), legend.main = 'Cohort') +
theme(legend.position = 'none') +
labs(x = "Mean Centered Age", y = "Mean RD", title = "Bilateral Mean RD",
subtitle = paste0(
"interaction p = ",
signif(summary(RD_scd_age)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 1.1, hjust = -0.01,
label = paste0(
# "p = ", signif(summary(ctl_RD_age)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(ctl_RD_age)$adj.r.squared, 2)),
color = "Control"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt")) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 2.5, hjust = -0.01,
label = paste0(
# "p = ", signif(summary(scd_RD_age)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(scd_RD_age)$adj.r.squared, 2)),
color = "SCD"), show.legend = F,
fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig3RD
fig5L1 <- interact_plot(L1_story_age, pred = age, modx = story_d, modx.values = "plus-minus",
plot.points = TRUE, interval = TRUE, point.alpha = 1, vary.lty = FALSE,
legend.main = 'Delayed Story Recall Score'
) +
theme(legend.position = 'none') +
labs(x = "Mean Centered Age", y = "Mean AxD", title = "Bilateral Mean AxD",
subtitle = paste0(
"interaction p = ", signif(summary(L1_story_age)$coefficients[4,4], 2)
)
) +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 1.1, hjust = -0.01,
label = paste0(
"p = ", signif(summary(upper_story_L1_age)$coefficients[2,4], 2),
# "p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(upper_story_L1_age)$adj.r.squared, 2))),
color = "darkblue", show.legend = F, fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
geom_richtext(aes(x = -Inf, y = Inf, vjust = 2.5, hjust = -0.01,
label = paste0(
# "p = ", signif(summary(lower_story_L1_age)$coefficients[2,4], 2),
"p < 0.001",
", adj-R<sup>2</sup> = ", signif(summary(lower_story_L1_age)$adj.r.squared, 2))),
show.legend = F, fill = NA, label.color = NA, label.padding = grid::unit(rep(0,4), "pt"))  +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
fig5L1
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/14_scatterplots.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/1_data_preparation.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/1_data_preparation.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/1_data_preparation.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/2_demo_cog.R", echo=TRUE)
#run synthseg, recon-all-clinical, and aparcstats2table first
library(tidyverse)
library(arsenal)
aseg = read_tsv("recon-all-clinical/asegtable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol)) #normalize by intracranial volume
lh_aparc = read_tsv("recon-all-clinical/lh_aparctable.tsv") %>%
rename(participant_id=lh.aparc.thickness)
rh_aparc = read_tsv("recon-all-clinical/rh_aparctable.tsv") %>%
rename(participant_id=rh.aparc.thickness)
wmparc = read_tsv("recon-all-clinical/wmparctable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol))
anat_over_55 = read.delim("anat_over_55.tsv", tryLogical = FALSE) %>%
select(participant_id, SCD)
volumes <- left_join(anat_over_55, aseg) %>%
select(participant_id, SCD, contains("Hippocampus")) %>%
left_join(., wmparc) %>%
select(participant_id, SCD, contains("Hippocampus"), contains("parahippo"),
contains("CerebralWhiteMatter")) %>%
drop_na()
thickness <- left_join(anat_over_55, lh_aparc) %>% left_join(., rh_aparc) %>%
drop_na() %>%
select(participant_id, contains("parahippocampal"), contains("entorhinal"),
contains("temporalpole"), contains("inferiortemporal"), contains("middletemporal"),
contains("inferiorparietal"), contains("middletemporal"), contains("inferiorparietal"),
contains("superiorparietal"), contains("precuneus"), contains("posteriorcingulate")) %>%
rename_with(~ str_remove(., "_thickness"))
volumes_thickness <- left_join(thickness, volumes)
View(volumes_thickness)
?drop_na
#run synthseg, recon-all-clinical, and aparcstats2table first
library(tidyverse)
library(arsenal)
#import aseg stats table (gray matter volumes)
aseg = read_tsv("recon-all-clinical/asegtable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol)) #normalize by intracranial volume
#import left aparc stats table (cortical thickness)
lh_aparc = read_tsv("recon-all-clinical/lh_aparctable.tsv") %>%
rename(participant_id=lh.aparc.thickness)
#import right aparc stats table (cortical thickness)
rh_aparc = read_tsv("recon-all-clinical/rh_aparctable.tsv") %>%
rename(participant_id=rh.aparc.thickness)
#import wmparc stats table (white matter volumes)
wmparc = read_tsv("recon-all-clinical/wmparctable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol)) #normalize by intracranial volume
#import the demographics and testing data of participants over the age of 55 with anatomical MRI scans
anat_over_55 = read.delim("anat_over_55.tsv", tryLogical = FALSE) %>%
select(participant_id, SCD) #select participant ID and SCD status
#create volumes table
volumes <- left_join(anat_over_55, aseg) %>% #join gray matter volumes with SCD status
select(participant_id, SCD, contains("Hippocampus")) %>% #select all columns that contain "Hippocampus" in the name
left_join(., wmparc) %>% #add white matter volumes
select(participant_id, SCD, contains("Hippocampus"), #select all prior columns
contains("parahippo"), #select all columns that contain "parahippo" in name
contains("CerebralWhiteMatter")) %>% #select all columns that contain "CerebralWhiteMatter" in name
drop_na() #drop rows with any NA values
#create thickness table
thickness <- left_join(anat_over_55, lh_aparc) %>% #join right cortical thickness with SCD stats
left_join(., rh_aparc) %>% #add left cortical thickness
drop_na() %>% #drop rows with any NA values
#select columns who's names contain the structures of interest
select(participant_id, contains("parahippocampal"), contains("entorhinal"),
contains("temporalpole"), contains("inferiortemporal"), contains("middletemporal"),
contains("inferiorparietal"), contains("middletemporal"), contains("inferiorparietal"),
contains("superiorparietal"), contains("precuneus"), contains("posteriorcingulate")) %>%
#remove "_thickness" from column names
rename_with(~ str_remove(., "_thickness"))
failed_qc <- c('sub-CC510255', #abnormality in left temporal pole
'sub-CC620821', #segmentation errors from large ventricles
'sub-CC621011', #segmentation errors from large ventricles
'sub-CC711027', #severe motion artifacts
'sub-CC721434' #segmentation errors from large ventricles
)
#join volumes and thickness tables
volumes_thickness <- left_join(thickness, volumes) %>%
filter(!participant_id %in% failed_qc)
View(volumes_thickness)
#prepare table
volumes_thickness$SCD <- factor(volumes_thickness$SCD,
levels = c(1, 0),
labels = c('SCD', 'Control'))
results <- "asis"
#prepare table
volumes_thickness$SCD <- factor(volumes_thickness$SCD, #change SCD column into factor type
levels = c(1, 0),
labels = c('SCD', 'Control'))
results <- "asis"
#generate table
results <- "asis"
thickness_table <- tableby(SCD ~ lh_parahippocampal +
rh_parahippocampal +
lh_entorhinal + rh_entorhinal +
lh_temporalpole + rh_temporalpole +
lh_inferiortemporal + rh_inferiortemporal +
lh_middletemporal + rh_middletemporal +
lh_inferiorparietal + rh_inferiorparietal +
lh_superiorparietal + rh_superiorparietal +
lh_precuneus + rh_precuneus +
lh_posteriorcingulate + rh_posteriorcingulate,
data = volumes_thickness, total = FALSE)
#run synthseg, recon-all-clinical, and aparcstats2table first
library(tidyverse)
library(arsenal)
#import aseg stats table (gray matter volumes)
aseg = read_tsv("recon-all-clinical/asegtable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol)) #normalize by intracranial volume
#import left aparc stats table (cortical thickness)
lh_aparc = read_tsv("recon-all-clinical/lh_aparctable.tsv") %>%
rename(participant_id=lh.aparc.thickness)
#import right aparc stats table (cortical thickness)
rh_aparc = read_tsv("recon-all-clinical/rh_aparctable.tsv") %>%
rename(participant_id=rh.aparc.thickness)
#import wmparc stats table (white matter volumes)
wmparc = read_tsv("recon-all-clinical/wmparctable.tsv") %>%
rename(participant_id=`Measure:volume`) %>%
mutate(across(c(2:ncol(.)), .fns = ~.*1000/EstimatedTotalIntraCranialVol)) #normalize by intracranial volume
#import the demographics and testing data of participants over the age of 55 with anatomical MRI scans
anat_over_55 = read.delim("anat_over_55.tsv", tryLogical = FALSE) %>%
select(participant_id, SCD) #select participant ID and SCD status
#create volumes table
volumes <- left_join(anat_over_55, aseg) %>% #join gray matter volumes with SCD status
select(participant_id, SCD, contains("Hippocampus")) %>% #select all columns that contain "Hippocampus" in the name
left_join(., wmparc) %>% #add white matter volumes
select(participant_id, SCD, contains("Hippocampus"), #select all prior columns
contains("parahippo"), #select all columns that contain "parahippo" in name
contains("CerebralWhiteMatter")) %>% #select all columns that contain "CerebralWhiteMatter" in name
drop_na() #drop rows with any NA values
#create thickness table
thickness <- left_join(anat_over_55, lh_aparc) %>% #join right cortical thickness with SCD stats
left_join(., rh_aparc) %>% #add left cortical thickness
drop_na() %>% #drop rows with any NA values
#select columns who's names contain the structures of interest
select(participant_id, contains("parahippocampal"), contains("entorhinal"),
contains("temporalpole"), contains("inferiortemporal"), contains("middletemporal"),
contains("inferiorparietal"), contains("middletemporal"), contains("inferiorparietal"),
contains("superiorparietal"), contains("precuneus"), contains("posteriorcingulate")) %>%
#remove "_thickness" from column names
rename_with(~ str_remove(., "_thickness"))
failed_qc <- c('sub-CC510255', #abnormality in left temporal pole
'sub-CC620821', #segmentation errors from large ventricles
'sub-CC621011', #segmentation errors from large ventricles
'sub-CC711027', #severe motion artifacts
'sub-CC721434' #segmentation errors from large ventricles
)
#join volumes and thickness tables
volumes_thickness <- left_join(thickness, volumes) %>%
filter(!participant_id %in% failed_qc) #remove rows that failed QC
volumes_thickness$SCD <- factor(volumes_thickness$SCD, #change SCD column into factor type
levels = c(1, 0),
labels = c('SCD', 'Control'))
#generate table
results <- "asis"
thickness_table <- tableby(SCD ~ lh_parahippocampal +
rh_parahippocampal +
lh_entorhinal + rh_entorhinal +
lh_temporalpole + rh_temporalpole +
lh_inferiortemporal + rh_inferiortemporal +
lh_middletemporal + rh_middletemporal +
lh_inferiorparietal + rh_inferiorparietal +
lh_superiorparietal + rh_superiorparietal +
lh_precuneus + rh_precuneus +
lh_posteriorcingulate + rh_posteriorcingulate,
data = volumes_thickness, total = FALSE)
summary(thickness_table, text = TRUE)
#generate volumes table
volumes_table <- tableby(SCD ~ `Left-Hippocampus` + `Right-Hippocampus` +
`wm-lh-parahippocampal` + `wm-rh-parahippocampal` +
lhCerebralWhiteMatterVol + rhCerebralWhiteMatterVol,
data = volumes_thickness, total = FALSE)
summary(volumes_table, text = TRUE) #view
write2word(volumes_table, "volumes_table.docx") #save volume table to file
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/7_cortical_volumes_thickness.R", echo=TRUE)
source("/Volumes/Research/lazarm03lab/labspace/AD/camcan995/derivatives/camcan_scd_dMRI_paper/11_fsl_glm_matrices.R", echo=TRUE)
library(tidyverse)
library(ggpmisc)
library(interactions)
library(officer)
library(ggtext)
remove_outliers <- function(x, na.rm = TRUE)
{
## Find 25% and 75% Quantiles using inbuild function
quant <- quantile(x, probs=c(.25, .75), na.rm = na.rm)
## Find Interquantile range and multiply it by 1.5
## to derive factor for range calculation
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
## fill the outlier elements with NA
y[x < (quant[1] - H)] <- NA
y[x > (quant[2] + H)] <- NA
y
}
#read in ROI means
scd_table <- read_csv('roi_diff_means/scd_means_table.csv')
View(thickness_table)
View(volumes_thickness)
thickness_table <- tableby(SCD ~ lh_parahippocampal +
rh_parahippocampal +
lh_entorhinal + rh_entorhinal +
lh_temporalpole + rh_temporalpole +
lh_inferiortemporal + rh_inferiortemporal +
lh_middletemporal + rh_middletemporal +
lh_inferiorparietal + rh_inferiorparietal +
lh_superiorparietal + rh_superiorparietal +
lh_precuneus + rh_precuneus +
lh_posteriorcingulate + rh_posteriorcingulate,
data = volumes_thickness)
summary(thickness_table, text = TRUE) #view
thickness_table <- tableby(SCD ~ lh_parahippocampal +
rh_parahippocampal +
lh_entorhinal + rh_entorhinal +
lh_temporalpole + rh_temporalpole +
lh_inferiortemporal + rh_inferiortemporal +
lh_middletemporal + rh_middletemporal +
lh_inferiorparietal + rh_inferiorparietal +
lh_superiorparietal + rh_superiorparietal +
lh_precuneus + rh_precuneus +
lh_posteriorcingulate + rh_posteriorcingulate,
data = volumes_thickness, total = FALSE)
summary(thickness_table, text = TRUE) #view
